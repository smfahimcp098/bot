const axios = require("axios");
const cheerio = require("cheerio");

module.exports = {
  config: {
    name: "covid",
    aliases: [],
    version: "1.0",
    author: "S M Fahim",
    countDown: 5,
    role: 0,
    longDescription: { en: "ржмрж╛ржВрж▓рж╛ржжрзЗрж╢рзЗрж░ COVID-19 ржбрзНржпрж╛рж╢ржмрзЛрж░рзНржб ржерзЗржХрзЗ ржЖржкржбрзЗржЯ ржкрж╛ржУрзЯрж╛ ржпрж╛ржмрзЗред" },
    category: "info",
  },
  onStart: async function({ message }) {
    try {
      const res = await axios.get('https://dashboard.dghs.gov.bd/pages/covid19.php', { timeout: 15000 });
      const $ = cheerio.load(res.data);

      const toBanglaNumber = (num) => {
        const bnDigits = ['рзж','рзз','рзи','рзй','рзк','рзл','рзм','рзн','рзо','рзп'];
        return num.toString().replace(/\d/g, d => bnDigits[+d]);
      };

      const monthMap = {
        January: 'ржЬрж╛ржирзБржпрж╝рж╛рж░рзА', February: 'ржлрзЗржмрзНрж░рзБржпрж╝рж╛рж░рзА', March: 'ржорж╛рж░рзНржЪ', April: 'ржПржкрзНрж░рж┐рж▓', May: 'ржорзЗ', June: 'ржЬрзБржи',
        July: 'ржЬрзБрж▓рж╛ржЗ', August: 'ржЖржЧрж╕рзНржЯ', September: 'рж╕рзЗржкрзНржЯрзЗржорзНржмрж░', October: 'ржЕржХрзНржЯрзЛржмрж░',
        November: 'ржиржнрзЗржорзНржмрж░', December: 'ржбрж┐рж╕рзЗржорзНржмрж░'
      };
      const toBanglaDate = (engDate) => {
        const parts = engDate.match(/(\w+)\s+(\d{1,2}),\s*(\d{4})/);
        if (!parts) return engDate;
        const [, monthEng, day, year] = parts;
        const monthBn = monthMap[monthEng] || monthEng;
        return `${monthBn} ${toBanglaNumber(day)}, ${toBanglaNumber(year)}`;
      };

      const lastUpdatedEng = $('p.last-updated').first().text().replace(/Last updated:\s*/i, '').trim();
      const lastUpdatedBn = toBanglaDate(lastUpdatedEng);

      const stats = {};
      $('div.stat-card').each((i, el) => {
        const label = $(el).find('h3').text().toLowerCase();
        const value = $(el).find('.value').text().replace(/,/g, '').trim();
        if (label.includes('lab test')) stats['ЁЯзк рж▓рзНржпрж╛ржм ржЯрзЗрж╕рзНржЯ'] = toBanglaNumber(value);
        else if (label.includes('confirmed')) stats['тЬЕ ржирж┐рж╢рзНржЪрж┐ржд'] = toBanglaNumber(value);
        else if (label.includes('recovered')) stats['ЁЯШК рж╕рзЗрж░рзЗ ржЙржарзЗржЫрзЗ'] = toBanglaNumber(value);
      });

      const yearStats = {};
      $('h4.column-header').filter((i, el) => $(el).text().includes('This Year')).closest('.stats-column').find('.mini-stat').each((i, el) => {
        const title = $(el).find('.mini-stat-title').text().toLowerCase();
        const val = $(el).find('.mini-stat-value').text().replace(/,/g, '').trim();
        if (title === 'tests') yearStats['ЁЯзк ржЯрзЗрж╕рзНржЯ'] = toBanglaNumber(val);
        else if (title === 'confirmed') yearStats['тЬЕ ржирж┐рж╢рзНржЪрж┐ржд'] = toBanglaNumber(val);
        else if (title === 'recovered') yearStats['ЁЯШК рж╕рзЗрж░рзЗ ржЙржарзЗржЫрзЗ'] = toBanglaNumber(val);
        else if (title === 'deaths') yearStats['тШая╕П ржорзГрждрзНржпрзБ'] = toBanglaNumber(val);
      });

      const last24hStats = {};
      $('h4.column-header').filter((i, el) => $(el).text().includes('Last 24 hours')).closest('.stats-column').find('.mini-stat').each((i, el) => {
        const title = $(el).find('.mini-stat-title').text().toLowerCase();
        const val = $(el).find('.mini-stat-value').text().replace(/,/g, '').trim();
        if (title === 'tests') last24hStats['ЁЯзк ржЯрзЗрж╕рзНржЯ'] = toBanglaNumber(val);
        else if (title === 'confirmed') last24hStats['тЬЕ ржирж┐рж╢рзНржЪрж┐ржд'] = toBanglaNumber(val);
        else if (title === 'recovered') last24hStats['ЁЯШК рж╕рзЗрж░рзЗ ржЙржарзЗржЫрзЗ'] = toBanglaNumber(val);
        else if (title === 'deaths') last24hStats['тШая╕П ржорзГрждрзНржпрзБ'] = toBanglaNumber(val);
      });

      const formatStats = (obj) =>
        Object.entries(obj).map(([k, v]) => `тАв ${k}: ${v}`).join('\n');

      const replyMsg = `ЁЯжа *ржмрж╛ржВрж▓рж╛ржжрзЗрж╢ COVID-19 ржЖржкржбрзЗржЯ* ЁЯжа\nтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБ\nЁЯХТ рж╢рзЗрж╖ ржЖржкржбрзЗржЯ: ${lastUpdatedBn}\n\nЁЯУК *ржорзЛржЯ рждржерзНржп:*
${formatStats(stats)}\n\nЁЯУЕ *рзирзжрзирзл рж╕рж╛рж▓рзЗрж░ рждржерзНржп:*
${formatStats(yearStats)}\n\nЁЯХР *ржЧржд рзирзк ржШржгрзНржЯрж╛рж░ рждржерзНржп:*
${formatStats(last24hStats)}\nтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБтФБ\nрж╕ржмрж╛рж░ рж╕рзБрж╕рзНржерждрж╛ ржХрж╛ржоржирж╛рзЯ ЁЯЩП ЁЯеА`.trim();

      await message.reply(replyMsg);

    } catch (error) {
      console.error(error);
      await message.reply("тЭМ | ржбрзЗржЯрж╛ ржЖржирж╛рж░ рж╕ржорзЯ рж╕ржорж╕рзНржпрж╛ рж╣рзЯрзЗржЫрзЗред ржкрж░рзЗ ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред");
    }
  }
};
