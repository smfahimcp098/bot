const axios = require("axios");

module.exports = {
  config: {
    name: "news",
    version: "1.0",
    author: "JARiF",
    countDown: 10,
    role: 1,
    category: "utilities",
    guide: {
      vi: "{pn}",
      en: "{pn}"
    }
  },

  onStart: async function ({ message, event }) {
    let news;
    try {
      const res = await axios.get("https://apis.vyturex.com/bbcnews");
      news = res.data;
      if (!Array.isArray(news) || news.length === 0)
        return message.reply("ЁЯШФ ржжрзБржГржЦрж┐ржд, ржХрзЛржирзЛ ржЦржмрж░ ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐ред ржкрж░рзЗ ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред");
    } catch (err) {
      console.error("BBC API error:", err);
      return message.reply("тЭМ ржЦржмрж░ ржЖржирждрзЗ рж╕ржорж╕рзНржпрж╛ рж╣ржпрж╝рзЗржЫрзЗред ржкрж░рзЗ ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред");
    }

    let replyText = "ЁЯУ░ *BBC ржмрж╛ржВрж▓рж╛ рж╢рж┐рж░рзЛржирж╛ржо (рзз-рзл)*:\n\n";
    for (let i = 0; i < Math.min(news.length, 5); i++) {
      replyText += `*${i + 1}. ${news[i].title}*\n`;
    }
    replyText += "\nЁЯУе ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд ржЬрж╛ржирждрзЗ рзз-рзл ржПрж░ ржоржзрзНржпрзЗ ржПржХржЯрж┐ ржирж╛ржорзНржмрж╛рж░ рж░рж┐ржкрзНрж▓рж╛ржЗ ржХрж░рзБржиред";

    const sentMsg = await message.reply(replyText.trim());

    global.GoatBot.onReply.set(sentMsg.messageID, {
      commandName: this.config.name,
      author: event.senderID,
      newsList: news.slice(0, 5),
      pagedReplies: {} 
    });
  },

  onReply: async function ({ Reply, message, event }) {
    const { newsList, pagedReplies } = Reply;
    const userID = event.senderID;
    const body = event.body?.trim().toLowerCase();

    if (body === "next") {
      const session = pagedReplies[userID];
      if (!session) return message.reply("тЪа ржЖржЧрзЗ ржХрзЛржирзЛ ржЦржмрж░ ржЦрзЛрж▓рж╛ рж╣ржпрж╝ржирж┐ред");
      if (session.index + 1 >= session.chunks.length) return message.reply("тЬЕ ржЖрж░ ржХрж┐ржЫрзБ ржирзЗржЗ ржжрзЗржЦрж╛ржирзЛрж░ ржорждрзЛред");

      session.index++;
      return message.reply(session.chunks[session.index]);
    }

    // Handle number selection
    const choice = parseInt(body);
    if (isNaN(choice) || choice < 1 || choice > newsList.length)
      return message.reply("тЭМ ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ рзз ржерзЗржХрзЗ рзл ржПрж░ ржоржзрзНржпрзЗ ржПржХржЯрж┐ рж╕ржарж┐ржХ рж╕ржВржЦрзНржпрж╛ ржжрж┐ржиред");

    const selected = newsList[choice - 1];
    const idMatch = selected.link.match(/\/articles\/([^\/?#]+)/);
    const articleId = idMatch ? idMatch[1] : null;

    try {
      const res = await axios.get(`https://apis.vyturex.com/bbcpost?id=${articleId}`);
      const data = res.data;

      const fullText = `ЁЯУ░ *${data.captions}*\n\nЁЯХТ ржкрзНрж░ржХрж╛рж╢рж┐ржд: ${data.time}\n\nЁЯФЧ https://www.bbc.com/bengali/articles/${articleId}\n\nЁЯУЭ ${data.paragraphs || "рж╕ржВржХрзНрж╖рж┐ржкрзНрждрж╕рж╛рж░ ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐ред"}`;
      const chunks = splitText(fullText, 1800);

      const replyBody = `${chunks[0]}\n\nтЬП ржкрж░ржмрж░рзНрждрзА ржЕржВрж╢ ржжрзЗржЦрждрзЗ 'next' рж▓рж┐ржЦрзБржиред`;
const sent = await message.reply(replyBody);

pagedReplies[userID] = {
  chunks,
  index: 0
};

global.GoatBot.onReply.set(sent.messageID, {
  commandName: this.config.name,
      author: event.senderID,
  pagedReplies
});

    } catch (err) {
      console.error("BBC POST fetch error:", err);
      return message.reply("тЭМ ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд ржЦржмрж░ ржЖржирждрзЗ рж╕ржорж╕рзНржпрж╛ рж╣ржпрж╝рзЗржЫрзЗред");
    }
  }
};

function splitText(text, maxLength) {
  const chunks = [];
  while (text.length > maxLength) {
    let splitAt = text.lastIndexOf("\n", maxLength);
    if (splitAt === -1) splitAt = maxLength;
    chunks.push(text.slice(0, splitAt));
    text = text.slice(splitAt).trim();
  }
  if (text.length > 0) chunks.push(text);
  return chunks;
}
